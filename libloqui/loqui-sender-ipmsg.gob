requires 2.0.0

%alltop{
/*
 * libloqui -- Chat/IM client library for GLib <http://loqui.good-day.net/>
 * Copyright (C) 2004 Yoichi Imai <yoichi@silver-forest.com>
 *
 * This Library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This Library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with the Gnome Library; see the file COPYING.LIB.  If not,
 * write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
%}

%h{
#include "loqui_sender.h"
#include "loqui_account.h"
%}

%{
#include <libloqui-intl.h>
#include "utils.h"

#include "loqui-socket-ipmsg.h"
#include "ipmsg_packet.h"
#include "loqui-account-ipmsg.h"
#include "ipmsg.h"
%}

%{
/* account: Loqui:Account */
#define SELF_GET_ACCOUNT(sender) (LOQUI_SENDER(sender)->account)

#define SELF_GET_ACCOUNT_IPMSG(sender) (LOQUI_ACCOUNT_IPMSG(SELF_GET_ACCOUNT(self)))
%}

class Loqui:Sender:IPMsg from Loqui:Sender
{
	/* helper */
	private void send_packet(self, IPMsg:Packet *packet) {
		LoquiAccount *account;
		LoquiSocketIPMsg *socket;

		account = SELF_GET_ACCOUNT(self);

		if (!loqui_account_get_is_connected(account)) {
			loqui_account_warning(account, _("The account is not connected."));
			return;
		}

		socket = loqui_account_ipmsg_get_socket(LOQUI_ACCOUNT_IPMSG(account));
		loqui_socket_ipmsg_send_packet(socket, packet);
	}

	public void nooperation(self) {
		IPMsgPacket *packet;

		packet = loqui_account_ipmsg_create_packet(SELF_GET_ACCOUNT_IPMSG(self), IPMSG_NOOPERATION, NULL);
		loqui_sender_ipmsg_send_packet(self, packet);
		g_object_unref(packet);
	}
	
	public void br_entry(self) {
		IPMsgPacket *packet;

		loqui_sender_ipmsg_nooperation(self);

		packet = loqui_account_ipmsg_create_packet(SELF_GET_ACCOUNT_IPMSG(self),
							   IPMSG_BR_ENTRY,
							   loqui_user_get_nick(LOQUI_USER(loqui_account_get_user_self(SELF_GET_ACCOUNT(self)))));
		loqui_sender_ipmsg_send_packet(self, packet);
		g_object_unref(packet);
	}

	public LoquiSenderIPMsg *
	new(Loqui:Account *account) {
		Self *self;

		self = GET_NEW;
		LOQUI_SENDER(self)->account = account;
		
		return self;
	}
}
