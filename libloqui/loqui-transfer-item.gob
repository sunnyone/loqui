requires 2.0.0

%alltop{
/*
 * libloqui -- Chat/IM client library for GLib
 * Copyright (C) 2004 Yoichi Imai <sunnyone41@gmail.com>
 *
 * This Library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This Library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with the Gnome Library; see the file COPYING.LIB.  If not,
 * write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */
%}

%h{
#include <libloqui/loqui-gobject-utils.h>
%}

%{
#include <libloqui/libloqui-intl.h>
#include "loqui-utils.h"

LOQUI_DEFINE_ACCESSOR_CONST_STRING(LoquiTransferItem, loqui_transfer_item, filename);
%}

class Loqui:Transfer:Item from G:Object
{
	public gchar *dirname = NULL unrefwith g_free;
	public gchar *filename = NULL unrefwith g_free;
	public gboolean is_upload;
	public gchar *address = NULL unrefwith g_free;
	public gint port;
	public gint size;
	public gdouble percent;

	property STRING dirname (
		nick = _("dirname"),
		blurb = _("Directory Name"),
		export, link);
	property STRING filename (
		nick = _("filename"),
		blurb = _("Filename"))
		set { loqui_transfer_item_set_filename(self, g_value_get_string(VAL)); }
		get { g_value_set_string(VAL, loqui_transfer_item_get_filename(self)); };

	property BOOLEAN is_upload (
		nick = _("is_upload"),
		blurb = _("Is upload"),
		default_value = FALSE,
		export, link);
	property INT port (
		nick = _("port"),
		blurb = _("Port"),
		export, link);
	property STRING address (
		nick = _("address"),
		blurb = _("Address"),
		export, link);
	property INT size (
		nick = _("size"),
		blurb = _("Size"),
		export, link);
	property DOUBLE percent(
		nick = _("percent"),
		blurb = _("Percent"),
		export, link);

	public Loqui:Transfer:Item *
	new(void) {
		Self *self;
		
		self = GET_NEW;

		return self;
	}

	signal last NONE (NONE)
	void
	start(self);

	signal last NONE (NONE)
	void
	cancel(self);

	signal first NONE (NONE)
	void
	completed(self);

	signal last NONE (STRING)
	void
	info(self, const gchar *text) {
		
	}

	signal last NONE (STRING)
	void
	warn(self, const gchar *text) {

	}

	public void
	information(self, const gchar *format, ...) {
		va_list args;
		gchar *str;
	
		va_start(args, format);
		str = g_strdup_vprintf(format, args);
		va_end(args);
		
		self_info(self, str);
		
		g_free(str);
	}

	public void
	warning(self, const gchar *format, ...) {
		va_list args;
		gchar *str;
	
		va_start(args, format);
		str = g_strdup_vprintf(format, args);
		va_end(args);
		
		self_warn(self, str);
		
		g_free(str);
	}

	public gchar *
	get_path_local(self) {
		/* TODO: convertion ? */
		return self_get_path_raw(self);
	}

	public gchar *
	get_path_raw(self) {
		gchar *tmp;

		tmp = g_strconcat(self->dirname, G_DIR_SEPARATOR_S, self->filename, NULL);

		return tmp;
	}

}

%h{
LOQUI_DEFINE_ACCESSOR_CONST_STRING_PROTOTYPE(LoquiTransferItem, loqui_transfer_item, filename);
%}
